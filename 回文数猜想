/*个正整数，如果从左向右读（称之为正序数）和从右向左读（称之为倒序数）是一样的，
这样的数就叫回文数。任取一个正整数，如果不是回文数，将该数与他的倒序数相加，若其和不是回文数，
则重复上述步骤，一直到获得回文数为止。例如：68变成154（68+86），再变成605（154+451），
最后变成1111（605+506），而1111是回文数。于是有数学家提出一个猜想：不论开始是什么正整数，
在经过有限次正序数和倒序数相加的步骤后，都会得到一个回文数。至今为止还不知道这个猜想是对还是错。
现在请你编程序验证之。*/
#include <stdio.h>
int main(){
	int i,j,a,d,z,n;
	int x[1000];//保存每个数加上它的反数的和
	int e[20];//将每个数拆分放到数组里
	scanf("%d",&n);//输入原始的数
	for(i=0;;i++)//使用i来统计进行了几次运算才得到回文数
	{
		x[i]=n;
		d=n;
		z=0;
		for(j=0;d;d/=10,j++)//拆分数
		{
			e[j]=d%10;
		}
		for(a=0;a<j-1;a++)//将拆分的数反过来再成为一个整数
		{
			z+=e[a];
			z*=10;
		}
		z+=e[a];
		if(z==n) break;//判断原来的数与反数是否相等，相等即为回文数，就退出循环
		n+=z;
	}
		printf("%d\n",i);
		printf("%d",x[0]);
		for(a=1;a<=i;a++)
		  printf("--->%d",x[a]);
    return 0;
}
